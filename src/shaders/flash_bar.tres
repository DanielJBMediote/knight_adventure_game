[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://be3ok0qckphnj"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_ubnxn"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.666667, 0.192157, 0.192157, 1)

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_v3pom"]

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_sj7f5"]
parameter_name = "BooleanParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_emi3o"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool BooleanParameter = false;
uniform vec4 ColorParameter : source_color = vec4(0.666667, 0.192157, 0.192157, 1.000000);



void fragment() {
// BooleanParameter:4
	bool n_out4p0 = BooleanParameter;


// Input:5
	vec4 n_out5p0 = COLOR;


// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


	vec3 n_out3p0;
// If:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 0.00001;
	if(abs((n_out4p0 ? 1.0 : 0.0) - n_in3p1) < n_in3p2)
	{
		n_out3p0 = vec3(n_out5p0.xyz);
	}
	else if((n_out4p0 ? 1.0 : 0.0) < n_in3p1)
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out3p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out3p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_ubnxn")
nodes/fragment/2/position = Vector2(-40, 380)
nodes/fragment/3/node = SubResource("VisualShaderNodeIf_v3pom")
nodes/fragment/3/position = Vector2(380, 180)
nodes/fragment/4/node = SubResource("VisualShaderNodeBooleanParameter_sj7f5")
nodes/fragment/4/position = Vector2(-40, 40)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_emi3o")
nodes/fragment/5/position = Vector2(-40, 260)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 4, 0, 3, 0, 2, 0, 3, 4, 2, 0, 3, 5, 5, 0, 3, 3)
